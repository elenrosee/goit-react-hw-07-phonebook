{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactsList/ContactsList.module.scss","components/Filter/Filter.module.scss","components/Notification/Notification.module.scss","components/redux/FormInput/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Notification/Notification.js","components/ContactsList/ContactsList.js","App.js","components/redux/FormInput/contacts-reducer.js","components/redux/store.js","index.js"],"names":["module","exports","addItem","createAction","deleteItem","changeFilter","connect","dispatch","onSubmit","contact","contactsActions","useState","name","setName","number","setNumber","handleChange","event","target","value","e","preventDefault","id","uuidv4","className","styles","contact_form","input_name","type","pattern","title","onChange","required","button","state","contacts","filter","form","Notification","message","normalizedFilter","toLowerCase","includes","getVisibleContacts","items","onDeleteContact","length","contact_list","map","contact_item","onClick","App","createReducer","Actions","payload","find","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.474f0d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__2qj8b\",\"input_name\":\"ContactForm_input_name__JCTER\",\"button\":\"ContactForm_button__1007G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsList_contact_list__252_C\",\"contact_item\":\"ContactsList_contact_item__sU5hE\",\"button\":\"ContactsList_button__2Uuuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__30cdg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__2vOHA\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addItem = createAction('contacts/Add');\nconst deleteItem = createAction('contacts/Delete');\nconst changeFilter = createAction('contacts/ChangeFilter');\n\n// const addItem = ({ name, number, id }) => ({\n//   type: types.ADD,\n//   payload: {\n//     name,\n//     number,\n//     id,\n//   },\n// });\n\n// const deleteItem = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addItem, deleteItem, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../redux/FormInput/contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.scss';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number, id: uuidv4() });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.contact_form}>\n      <label>\n        <p className={styles.input_name}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label>\n        <p className={styles.input_name}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsActions.addItem(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../redux/FormInput/contacts-actions';\nimport styles from './Filter.module.scss';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <form className={styles.form}>\n      <label>\n        <p>Find contacts by name</p>\n        <input type=\"text\" value={value} onChange={onChange} />\n      </label>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.scss\";\n\nexport default function Notification({ message }) {\n  return <h3 className={styles.title}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import Filter from '../Filter';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styles from './ContactsList.module.scss';\nimport contactsActions from '../redux/FormInput/contacts-actions';\n\nimport Notification from '../Notification';\nimport { Fragment } from 'react';\n\nfunction ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <Fragment>\n      {contacts.length > 0 ? (\n        <Fragment>\n          <Filter />\n          <ul className={styles.contact_list}>\n            {contacts.map(({ name, number, id }) => (\n              <li key={id} className={styles.contact_item}>\n                <span>\n                  {name}: {number}\n                </span>\n                <button\n                  type=\"button\"\n                  onClick={() => onDeleteContact(id)}\n                  className={styles.button}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </Fragment>\n      ) : (\n        <Notification message=\"Empty contacts list\" />\n      )}\n    </Fragment>\n  );\n}\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsActions.deleteItem(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { Fragment } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\n\nexport default function App() {\n  return (\n    <Fragment>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactsList />\n    </Fragment>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport Actions from './contacts-actions';\n\nconst initialItemsState = [];\n\nconst addContact = (state, { payload }) =>\n  state.find(({ name }) => name.toLowerCase() === payload.name.toLowerCase())\n    ? alert(`${payload.name} is already in contacts`)\n    : [payload, ...state];\n\nconst items = createReducer(initialItemsState, {\n  [Actions.addItem]: addContact,\n  [Actions.deleteItem]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [Actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './FormInput/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\n\nimport App from './App';\nimport store from './components/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}